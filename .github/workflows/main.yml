name: publish ezyq

on:
  # release:
  #   types: [published]
    
  push: 
    # branches:
    #   - main
    #   - 'releases/**'
    tags:
      - '*'
    
  workflow_dispatch:
  

env:

  # IMAGE_TAG: v1.0.0
  IMAGE_TAG: ${{ github.ref_name }}

  FRONTEND_NAME: ezyq-frontend
  BACKEND_NAME: ezyq-backend
 
  REGISTRY_TAG: ${{ github.event.repository.name }}

  #Github registry parameter
  GITHUB_CONTAINER_REGISTRY: ghcr.io

  #ECR registry parameter
  ECR_AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: test
  
  #Openshift registry parameter
  OPENSHIFT_REGISTRY: tba
  OPENSHIFT_USERNAME: tba
  
  

jobs:
  build_and_scan_application:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      

      - name: Build Docker images
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          # file: ./docker/dockerfile/dev.Dockerfile
          tags: '${{ env.REGISTRY_TAG }}:${{ env.FRONTEND_NAME }}-${{ env.IMAGE_TAG }}'
          
      # - name: test
      #   run: |
      #     docker images
      
      # - name: test
      #   run: |
      #     echo "Tag name from github.ref_name: ${{  github.ref_name }}"
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY_TAG }}:${{ env.FRONTEND_NAME }}-${{ env.IMAGE_TAG }}'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          # exit-code: '1'
          exit-code: '0'
          
      # - name: 
              
              
  publish_application:
    runs-on: ubuntu-latest
    needs:  build_and_scan_application
    steps:
    
      - name: Check out the repo
        uses: actions/checkout@v3
      
    
      - name: Log in to the Github Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GITHUB_CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
              
              
      - name: Extract metadata (tags, labels) for Docker
        id: meta_frontend
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.GITHUB_CONTAINER_REGISTRY }}/${{ github.repository }}
          tags: |
            type=raw,value=${{ env.FRONTEND_NAME }}-${{ env.IMAGE_TAG }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta_backend
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.GITHUB_CONTAINER_REGISTRY }}/${{ github.repository }}
          tags: |
            type=raw,value=${{ env.BACKEND_NAME }}-${{ env.IMAGE_TAG }}
      
          
      - name: Push Docker images
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          # file: ./docker/dockerfile/dev.Dockerfile
          push: true
          tags: ${{ steps.meta_frontend.outputs.tags }}


      - name: Push Docker images
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          file: ./backend/docker/dockerfile/dev.Dockerfile
          push: true
          tags: ${{ steps.meta_backend.outputs.tags }}
          
      - name: test
        run: |
          docker images
